#!/usr/bin/env bash

set -e

export HOME=/home/vcap
export PATH=/var/vcap/packages/ruby/bin:$PATH

cd /var/vcap/packages/cf-uaac/cf-uaac

export uaa_url=<%= p('cf_splunk.uaa_url') %>
export uaa_admin_secret=<%= p('cf_splunk.uaa_admin_secret') %>
export uaa_username=<%= p('cf_splunk.uaa_username') %>
export uaa_secret=<%= p('cf_splunk.uaa_secret') %>

export skip_ssl_flag=""
if [ <%= p('cf_splunk.insecure_skip_verify') %> = true ]; then
  echo "Enabling skip ssl flag"
  export skip_ssl_flag="--skip-ssl-validation"
fi
bundle exec uaac target "${uaa_url}" "${skip_ssl_flag}"
bundle exec uaac token client get admin -s "${uaa_admin_secret}"

set +e
bundle exec uaac clients | grep "^\s*${uaa_username}\$" > /dev/null
export found=$?
set -e

echo "Found client: ${found}"
if [ ${found} -eq 0 ]; then
	echo "Client exists: updating"

	bundle exec uaac client update "${uaa_username}" \
		--scope openid,oauth.approvals,doppler.firehose \
		--authorities oauth.login,doppler.firehose \
		--authorized_grant_types authorization_code,client_credentials,refresh_token
	bundle exec uaac secret set "${uaa_username}" --secret "${uaa_secret}"
else
	echo "Client doesn't exist: creating"

	bundle exec uaac client add "${uaa_username}" \
		--secret "${uaa_secret}" \
		--scope openid,oauth.approvals,doppler.firehose \
		--authorities oauth.login,doppler.firehose \
		--authorized_grant_types authorization_code,client_credentials,refresh_token
fi
